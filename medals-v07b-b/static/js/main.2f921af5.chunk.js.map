{"version":3,"sources":["components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Medal","props","medal","country","onIncrement","onDecrement","className","name","current","saved","onClick","id","disabled","Country","medals","onDelete","onUpdate","onReset","sum","forEach","getMedalsTotal","map","unsaved","renderSaveButton","Fragment","style","marginLeft","NewCountry","onAdd","prompt","trim","length","alert","App","useState","countries","setCountries","setMedals","apiEndpoint","useEffect","fetchedMedals","a","axios","get","fetchedCountries","data","newCountries","newCountry","count","push","fetchCountries","handleAdd","post","concat","handleDelete","countryId","originalCountries","filter","c","delete","response","status","console","log","handleUpdate","idx","findIndex","mutableCountries","jsonPatch","op","path","value","JSON","stringify","patch","handleReset","handleIncrement","medalName","handleDecrement","reduce","b","getAllMedalsTotal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2f921af5.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Medal = (props) => {\r\n  const { medal, country, onIncrement, onDecrement } = props;\r\n  return (\r\n    <div className=\"medals\">\r\n      { \r\n        ( country[medal.name].current !== country[medal.name].saved) ?\r\n          <span className=\"delta\">{medal.name} Medals: {country[medal.name].current}</span>\r\n        :\r\n          <span>{medal.name} Medals: {country[medal.name].current}</span>\r\n      }\r\n      <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\r\n      <button disabled={ country[medal.name].current === 0 } onClick={ () => onDecrement(country.id, medal.name) }>-</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medal;\r\n","import React from 'react';\r\nimport Medal from './Medal';\r\n\r\nconst Country = (props) => {\r\n  const { country, medals, onIncrement, onDecrement, onDelete, onUpdate, onReset } = props;\r\n\r\n  const getMedalsTotal = (country, medals) => {\r\n    let sum = 0;\r\n    medals.forEach(medal => { sum += country[medal.name].current; });\r\n    return sum;\r\n  }\r\n  const renderSaveButton = () => {\r\n    let unsaved = false;\r\n    medals.forEach(medal => {\r\n      if (country[medal.name].current !== country[medal.name].saved) {\r\n        unsaved = true;\r\n      }\r\n    });\r\n    return unsaved;\r\n  }\r\n  return (\r\n    <div className=\"country\">\r\n      <div className=\"name\">\r\n        { country.name }\r\n        <span className=\"badge\">\r\n          { getMedalsTotal(country, medals) }\r\n        </span>\r\n      </div>\r\n      { medals.map(medal =>\r\n        <Medal \r\n          key={ medal.id } \r\n          country={ country } \r\n          medal={ medal } \r\n          onIncrement={ onIncrement } \r\n          onDecrement={ onDecrement } />\r\n      ) }\r\n      <button onClick={() => onDelete(country.id)}>delete</button>\r\n      { renderSaveButton() &&\r\n        <React.Fragment>\r\n          <button style={{marginLeft:'8px'}} onClick={ () => onUpdate(country.id) }>save</button>\r\n          <button style={{marginLeft:'8px'}} onClick={ () => onReset(country.id) }>reset</button>\r\n        </React.Fragment>\r\n      }\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react';\r\n\r\nconst NewCountry = (props) => {\r\n  const { onAdd } = props;\r\n  const handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name.trim().length > 0) {\r\n      onAdd(name);\r\n    } else {\r\n      alert(\"Country name cannot be 0 length\");\r\n    }\r\n  }\r\n  return (\r\n    <div className='newCountryButton'>\r\n      <button onClick={ handleClick }>New Country</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCountry;\r\n","// Repository:  medals-b-react\r\n// Author:      Jeff Grissom\r\n// Version:     7b.xx\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Country from './components/Country';\r\nimport NewCountry from './components/NewCountry';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [ countries, setCountries ] = useState([]);\r\n  const [ medals, setMedals ] = useState([]);\r\n  const apiEndpoint = \"https://medalsapi.azurewebsites.net/api/country\";\r\n\r\n  // this is the functional equivalent to componentDidMount\r\n  useEffect(() => {\r\n    // initial data loaded here\r\n    let fetchedMedals = [\r\n      { id: 1, name: 'gold' },\r\n      { id: 2, name: 'silver' },\r\n      { id: 3, name: 'bronze' },\r\n    ]\r\n    setMedals(fetchedMedals);\r\n    async function fetchCountries() {\r\n      const { data : fetchedCountries } = await axios.get(apiEndpoint);\r\n      let newCountries = [];\r\n      fetchedCountries.forEach(country => {\r\n        let newCountry = {\r\n          id: country.id,\r\n          name: country.name,\r\n        };\r\n        fetchedMedals.forEach(medal => {\r\n          const count = country[medal.name];\r\n          newCountry[medal.name] = { current: count, saved: count };\r\n        });\r\n        newCountries.push(newCountry);\r\n      });\r\n      setCountries(newCountries);\r\n    }\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const handleAdd = async (name) => {\r\n    const { data: post } = await axios.post(apiEndpoint, { name: name });\r\n    let newCountry = { \r\n      id: post.id, \r\n      name: post.name,\r\n    };\r\n    medals.forEach(medal => {\r\n      const count = post[medal.name];\r\n      newCountry[medal.name] = { current: count, saved: count };\r\n    });\r\n    setCountries(countries.concat(newCountry));\r\n  }\r\n  const handleDelete = async (countryId) => {\r\n    const originalCountries = countries;\r\n    setCountries(countries.filter(c => c.id !== countryId));\r\n    try {\r\n      await axios.delete(`${apiEndpoint}/${countryId}`);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // country already deleted\r\n        console.log(\"The record does not exist - it may have already been deleted\");\r\n      } else { \r\n        alert('An error occurred while deleting');\r\n        setCountries(originalCountries);\r\n      }\r\n    }\r\n  }\r\n  const handleUpdate = async (countryId) => {\r\n    const originalCountries = countries;\r\n\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [ ...countries ];\r\n    const country = mutableCountries[idx];\r\n    let jsonPatch = [];\r\n    medals.forEach(medal => {\r\n      if (country[medal.name].current !== country[medal.name].saved) {\r\n        jsonPatch.push({ op: \"replace\", path: medal.name, value: country[medal.name].current });\r\n        country[medal.name].saved = country[medal.name].current;\r\n      }\r\n    });\r\n    console.log(`json patch for id: ${countryId}: ${JSON.stringify(jsonPatch)}`);\r\n    // update state\r\n    setCountries(mutableCountries);\r\n\r\n    try {\r\n      await axios.patch(`${apiEndpoint}/${countryId}`, jsonPatch);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // country already deleted\r\n        console.log(\"The record does not exist - it may have already been deleted\");\r\n      } else { \r\n        alert('An error occurred while updating');\r\n        setCountries(originalCountries);\r\n      }\r\n    }\r\n  }\r\n  const handleReset = (countryId) => {\r\n    // console.log(`Reset: ${countryId}`);\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [ ...countries ];\r\n    const country = mutableCountries[idx];\r\n    medals.forEach(medal => {\r\n      country[medal.name].current = country[medal.name].saved;\r\n    });\r\n    setCountries(mutableCountries);\r\n  }\r\n  const handleIncrement = (countryId, medalName) => {\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [...countries ];\r\n    mutableCountries[idx][medalName].current += 1;\r\n    setCountries(mutableCountries);\r\n  }\r\n  const handleDecrement = (countryId, medalName) => {\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [...countries ];\r\n    mutableCountries[idx][medalName].current -= 1;\r\n    setCountries(mutableCountries);\r\n  }\r\n  const getAllMedalsTotal = () => {\r\n    let sum = 0;\r\n    medals.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name].current, 0); });\r\n    return sum;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className='appHeading'>\r\n        Olympic Medals\r\n        <span className='badge'>\r\n          { getAllMedalsTotal() }\r\n        </span>\r\n      </div>\r\n      <div className='countries'>\r\n          { countries.map(country => \r\n            <Country \r\n              key={ country.id } \r\n              country={ country } \r\n              medals={ medals }\r\n              onDelete={ handleDelete }\r\n              onUpdate={ handleUpdate }\r\n              onReset={ handleReset }\r\n              onIncrement={ handleIncrement } \r\n              onDecrement={ handleDecrement } />\r\n          )}\r\n      </div>\r\n      <NewCountry onAdd={ handleAdd } />\r\n    </React.Fragment>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}