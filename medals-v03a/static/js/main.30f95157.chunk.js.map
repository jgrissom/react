{"version":3,"sources":["components/Medal.jsx","components/Country.jsx","components/Countries.jsx","App.js","reportWebVitals.js","index.js"],"names":["Medal","state","this","props","medal","country","onIncrement","onDecrement","classes","className","countryMedal","Avatar","goldAvatar","name","medalName","IconButton","onClick","id","iconButton","color","fontSize","Component","withStyles","marginTop","display","alignItems","backgroundColor","paddingLeft","width","textTransform","padding","withTheme","Country","medals","sum","forEach","Paper","elevation","Badge","badgeContent","getMedalsTotal","countryName","Divider","divider","map","marginLeft","marginRight","marginBottom","paddingRight","Countries","countries","Grid","justifyContent","container","style","margin","item","App","goldMedalCount","silverMedalCount","bronzeMedalCount","RGBColor","handleIncrement","countryId","idx","findIndex","c","setState","handleDecrement","getMedalTotal","reduce","a","b","Container","Fragment","appHeading","appHeadingBadge","getAllMedalsTotal","textAlign","fontFamily","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30f95157.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst styles = {\r\n  countryMedal: {\r\n    marginTop: '10px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  goldAvatar: {\r\n    color: 'black', \r\n    backgroundColor: '#ffc107',\r\n  },\r\n  medalName: {\r\n    fontSize: '1.4em',\r\n    paddingLeft: '10px',\r\n    width: '130px',\r\n    textTransform: 'capitalize',\r\n  },\r\n  iconButton: {\r\n    padding: '2px',\r\n  }\r\n}\r\n\r\nclass Medal extends Component {\r\n  state = {  }\r\n  render() { \r\n    const { medal, country, onIncrement, onDecrement, classes } = this.props;\r\n    return (\r\n      <div className={classes.countryMedal}>\r\n        <Avatar className={classes.goldAvatar}>\r\n          {country[medal.name + 'MedalCount']}\r\n        </Avatar>\r\n        <span className={classes.medalName}>\r\n          {medal.name} Medals\r\n        </span>\r\n        <IconButton\r\n          onClick={ () => onIncrement(country.id, medal.name) } \r\n          className={classes.iconButton} \r\n          color='primary' \r\n          aria-label='increment gold'>\r\n          <AddBoxOutlinedIcon fontSize='large' />\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={ () => onDecrement(country.id, medal.name) }\r\n          className={classes.iconButton}\r\n          color='secondary' \r\n          aria-label='decrement gold'>\r\n          <IndeterminateCheckBoxOutlinedIcon fontSize='large' />\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(Medal);\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Divider } from '@material-ui/core';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Medal from './Medal';\r\n\r\nconst styles = {\r\n  country: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginTop: 10,\r\n    padding: 18,\r\n    width: 260,\r\n  },\r\n  divider: {\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n  },\r\n  countryName: {\r\n    fontSize: '1.8em',\r\n    paddingRight: '4px',\r\n  },\r\n}\r\n\r\nclass Country extends Component {\r\n  getMedalsTotal(country, medals) {\r\n    let sum = 0;\r\n    medals.forEach(medal => {\r\n      sum += country[medal.name + 'MedalCount'];\r\n    });\r\n    return sum;\r\n  }\r\n  render() { \r\n    const { classes, country, medals, onIncrement, onDecrement } = this.props;\r\n    return (\r\n      <Paper elevation={4} className={classes.country}>\r\n        <Badge badgeContent={ this.getMedalsTotal(country, medals) } color='primary'>\r\n          <div className={classes.countryName}>\r\n            { country.name }\r\n          </div>\r\n        </Badge>\r\n        <Divider className={classes.divider} />\r\n        { medals.map(medal =>\r\n          <Medal \r\n            key={ medal.id } \r\n            country={ country } \r\n            medal={ medal } \r\n            onIncrement={ onIncrement } \r\n            onDecrement={ onDecrement } />\r\n        ) }\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n \r\nexport default withStyles(styles, { withTheme: true })(Country);\r\n","import React, { Component } from 'react';\r\nimport { Grid } from '@material-ui/core';\r\nimport Country from './Country';\r\n\r\nclass Countries extends Component {\r\n  state = {  }\r\n  render() { \r\n    const { countries, medals, onIncrement, onDecrement} = this.props;\r\n    return (\r\n      <Grid justifyContent='center' container>\r\n         { countries.map(country =>\r\n          <Grid style={{ margin: '10px' }} item key={ country.id }>\r\n            <Country \r\n              country={country} \r\n              medals={medals}\r\n              onIncrement={ onIncrement } \r\n              onDecrement={ onDecrement } />\r\n          </Grid>\r\n        ) }\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Countries;\r\n","// Repository:  medals-a-react\r\n// Author:      Jeff Grissom\r\n// Version:     3.xx\r\nimport React, { Component } from 'react';\r\nimport Countries from './components/Countries';\r\nimport Container from '@material-ui/core/Container';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './App.css';\r\n\r\nconst styles = {\r\n  appHeading: {\r\n    textAlign: 'center',\r\n    marginTop: '15px',\r\n  },\r\n  appHeadingBadge: {\r\n    fontSize: '2.0em',\r\n    fontFamily: 'Teko, sans-serif',\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  state = {\r\n    countries: [\r\n      { id: 1, name: 'United States', goldMedalCount: 2, silverMedalCount: 2, bronzeMedalCount: 3 },\r\n      { id: 2, name: 'China', goldMedalCount: 3, silverMedalCount: 1, bronzeMedalCount: 0 },\r\n      { id: 3, name: 'Germany', goldMedalCount: 0, silverMedalCount: 2, bronzeMedalCount: 2 },\r\n    ],\r\n    medals: [\r\n      { id: 1, name: 'gold', RGBColor: '#ffc107' },\r\n      { id: 2, name: 'silver', RGBColor: '#c4cacc' },\r\n      { id: 3, name: 'bronze', RGBColor: '#cd7f32' },\r\n    ]\r\n  }\r\n  handleIncrement = (countryId, medal) => {\r\n    const countries = [ ...this.state.countries ];\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    countries[idx][medal + 'MedalCount'] += 1;\r\n    this.setState({ countries: countries });\r\n  }\r\n  handleDecrement = (countryId, medal) => {\r\n    const countries = [ ...this.state.countries ];\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    if (countries[idx][medal + 'MedalCount'] === 0) return;\r\n    countries[idx][medal + 'MedalCount'] -= 1;\r\n    this.setState({ countries: countries });\r\n  }\r\n  getMedalTotal = (medal) => this.state.countries.reduce((a, b) => a + b[medal + 'MedalCount'], 0);\r\n  getAllMedalsTotal() {\r\n    let sum = 0;\r\n    this.state.medals.forEach(medal => {\r\n      sum += this.getMedalTotal(medal.name);\r\n    });\r\n    return sum;\r\n  }\r\n  render() { \r\n    const {classes} = this.props;\r\n    return (\r\n      <Container>\r\n        <React.Fragment>\r\n          <div className={classes.appHeading}>\r\n            <Badge \r\n              className={classes.appHeadingBadge}\r\n              badgeContent={ this.getAllMedalsTotal() } \r\n              color='primary'>\r\n              Olympic Medals\r\n            </Badge>\r\n          </div>\r\n          <Countries \r\n            countries={ this.state.countries } \r\n            medals={ this.state.medals } \r\n            onIncrement={ this.handleIncrement } \r\n            onDecrement={ this.handleDecrement } />\r\n        </React.Fragment>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles, { withTheme: true })(App);\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}