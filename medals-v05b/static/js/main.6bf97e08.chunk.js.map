{"version":3,"sources":["services/medalService.js","services/countryService.js","components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["medals","id","name","getMedals","countries","goldMedalCount","silverMedalCount","bronzeMedalCount","getCountries","addCountry","length","Math","max","map","country","concat","deleteCountry","countryId","filter","c","Medal","props","medal","onIncrement","onDecrement","className","onClick","Country","sum","forEach","this","onDelete","getMedalsTotal","Component","NewCountry","state","handleClick","prompt","trim","onAdd","alert","style","marginBottom","App","handleIncrement","idx","findIndex","setState","handleDecrement","handleAdd","handleDelete","getMedalTotal","reduce","a","b","Fragment","getAllMedalsTotal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6bf97e08.chunk.js","sourcesContent":["const medals = [\r\n  { id: 1, name: 'gold' },\r\n  { id: 2, name: 'silver' },\r\n  { id: 3, name: 'bronze' },\r\n]\r\n\r\nexport function getMedals() {\r\n  return medals;\r\n}\r\n","let countries = [\r\n  { id: 1, name: 'United States', goldMedalCount: 0, silverMedalCount: 0, bronzeMedalCount: 0 },\r\n  { id: 2, name: 'China', goldMedalCount: 0, silverMedalCount: 0, bronzeMedalCount: 0 },\r\n  { id: 3, name: 'Germany', goldMedalCount: 0, silverMedalCount: 0, bronzeMedalCount: 0 },\r\n  { id: 4, name: 'Spain', goldMedalCount: 0, silverMedalCount: 0, bronzeMedalCount: 0 },\r\n]\r\n\r\nexport function getCountries() {\r\n  return countries;\r\n}\r\n\r\nexport function addCountry(name) {\r\n  const id = countries.length === 0 ? 1 : Math.max(...countries.map(country => country.id)) + 1;\r\n  countries = countries.concat({ id: id, name: name, goldMedalCount: 0, silverMedalCount: 0, bronzeMedalCount: 0 });\r\n}\r\n\r\nexport function deleteCountry(countryId) {\r\n  countries = countries.filter(c => c.id !== countryId);\r\n}\r\n","import React from 'react';\r\n\r\nconst Medal = (props) => {\r\n  const { medal, country, onIncrement, onDecrement } = props;\r\n  return (\r\n    <div className=\"medals\">\r\n      { medal.name } Medals: { country[medal.name + \"MedalCount\"] }\r\n      <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\r\n      <button onClick={ () => onDecrement(country.id, medal.name) }>-</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medal;\r\n","import React, { Component } from 'react';\r\nimport Medal from './Medal';\r\n\r\nclass Country extends Component {\r\n  getMedalsTotal(country, medals) {\r\n    let sum = 0;\r\n    medals.forEach(medal => {\r\n      sum += country[medal.name + 'MedalCount'];\r\n    });\r\n    return sum;\r\n  }\r\n  render() { \r\n    const { country, medals, onIncrement, onDecrement, onDelete } = this.props;\r\n    return (\r\n      <div className=\"section\">\r\n        <div className=\"name\">\r\n          { country.name } - { this.getMedalsTotal(country, medals) }\r\n        </div>\r\n        { medals.map(medal =>\r\n            <Medal \r\n              key={ medal.id } \r\n              country={ country } \r\n              medal={ medal } \r\n              onIncrement={ onIncrement } \r\n              onDecrement={ onDecrement } />\r\n        ) }\r\n        <button onClick={() => onDelete(country.id)}>delete</button>\r\n        <hr />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n \r\nexport default Country;\r\n","import React, { Component } from 'react';\r\n\r\nclass NewCountry extends Component {\r\n  state = {  }\r\n  handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name === null) {\r\n      return;\r\n    } else if (name.trim().length > 0) {\r\n      this.props.onAdd(name);\r\n    } else {\r\n      alert(\"Country name cannot be 0 length\");\r\n    }\r\n  }\r\n  render() { \r\n    return (\r\n      <button style={{marginBottom: '20px'}} onClick={ this.handleClick }>New Country</button>\r\n    );\r\n  }\r\n}\r\n \r\nexport default NewCountry;\r\n","// Repository:  medals-b-react\r\n// Author:      Jeff Grissom\r\n// Version:     5.xx\r\nimport React, { Component } from 'react';\r\nimport { getMedals } from './services/medalService';\r\nimport { getCountries, addCountry, deleteCountry } from './services/countryService';\r\nimport Country from './components/Country';\r\nimport NewCountry from './components/NewCountry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    countries: getCountries(),\r\n    medals: getMedals(),\r\n  }\r\n  handleIncrement = (countryId, medal) => {\r\n    const countries = [ ...this.state.countries ];\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    countries[idx][medal + 'MedalCount'] += 1;\r\n    this.setState({ countries: countries });\r\n  }\r\n  handleDecrement = (countryId, medal) => {\r\n    const countries = [ ...this.state.countries ];\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    if (countries[idx][medal + 'MedalCount'] === 0) return;\r\n    countries[idx][medal + 'MedalCount'] -= 1;\r\n    this.setState({ countries: countries });\r\n  }\r\n  handleAdd = (name) => {\r\n    addCountry(name);\r\n    this.setState({ countries:getCountries() });\r\n  }\r\n  handleDelete = (countryId) => {\r\n    deleteCountry(countryId);\r\n    this.setState({ countries:getCountries() });\r\n  }\r\n  getMedalTotal = (medal) => this.state.countries.reduce((a, b) => a + b[medal + 'MedalCount'], 0);\r\n  getAllMedalsTotal() {\r\n    let sum = 0;\r\n    this.state.medals.forEach(medal => {\r\n      sum += this.getMedalTotal(medal.name);\r\n    });\r\n    return sum;\r\n  }\r\n  render() { \r\n    return (\r\n      <React.Fragment>\r\n        { this.state.countries.map(country => \r\n          <Country \r\n            key={ country.id } \r\n            country={ country } \r\n            medals={ this.state.medals }\r\n            onIncrement={ this.handleIncrement } \r\n            onDecrement={ this.handleDecrement }\r\n            onDelete={ this.handleDelete } />\r\n        ) }\r\n        <div className='section'>\r\n          <div className='name'>\r\n            Total Medals Awarded - { this.getAllMedalsTotal() }\r\n          </div>\r\n          { this.state.medals.map(medal => \r\n            <div className='medals' key={medal.id}>\r\n              Total { medal.name } Awarded - { this.getMedalTotal(medal.name) }\r\n            </div>\r\n          ) }\r\n        </div>\r\n        <div className='section'>\r\n          <hr />\r\n          <NewCountry onAdd={ this.handleAdd } />\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}