{"version":3,"sources":["components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Medal","props","medal","country","onIncrement","onDecrement","className","name","onClick","id","disabled","Country","medals","onDelete","sum","forEach","getMedalsTotal","map","NewCountry","onAdd","prompt","trim","length","App","apiEndpoint","useState","countries","setCountries","useRef","useEffect","a","axios","get","fetchedCountries","data","fetchCountries","handleAdd","post","concat","handleDelete","countryId","originalCountries","filter","c","delete","response","status","console","log","alert","handleIncrement","medalName","handleUpdate","handleDecrement","factor","idx","findIndex","mutableCountries","jsonPatch","op","path","value","JSON","stringify","patch","Fragment","current","reduce","b","getAllMedalsTotal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8c003dfb.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Medal = (props) => {\r\n  const { medal, country, onIncrement, onDecrement } = props;\r\n  return (\r\n    <div className=\"medals\">\r\n      { medal.name } Medals: { country[medal.name] }\r\n      <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\r\n      <button disabled={ country[medal.name] === 0 } onClick={ () => onDecrement(country.id, medal.name) }>-</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medal;\r\n","import React from 'react';\r\nimport Medal from './Medal';\r\n\r\nconst Country = (props) => {\r\n  const { country, medals, onIncrement, onDecrement, onDelete } = props;\r\n\r\n  const getMedalsTotal = (country, medals) => {\r\n    let sum = 0;\r\n    medals.forEach(medal => { sum += country[medal.name]; });\r\n    return sum;\r\n  }\r\n  return (\r\n    <div className=\"country\">\r\n      <div className=\"name\">\r\n        { country.name }\r\n        <span className=\"badge\">\r\n          { getMedalsTotal(country, medals) }\r\n        </span>\r\n      </div>\r\n      { medals.map(medal =>\r\n        <Medal \r\n          key={ medal.id } \r\n          country={ country } \r\n          medal={ medal } \r\n          onIncrement={ onIncrement } \r\n          onDecrement={ onDecrement } />\r\n      ) }\r\n      <button onClick={() => onDelete(country.id)}>delete</button>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react';\r\n\r\nconst NewCountry = (props) => {\r\n  const { onAdd } = props;\r\n  const handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name && name.trim().length > 0) {\r\n      onAdd(name);\r\n    }\r\n  }\r\n  return (\r\n    <div className='newCountryButton'>\r\n      <button onClick={ handleClick }>New Country</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCountry;\r\n","// Repository:  medals-b-react\r\n// Author:      Jeff Grissom\r\n// Version:     7.xx-01\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport Country from './components/Country';\r\nimport NewCountry from './components/NewCountry';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  // const apiEndpoint = \"https://localhost:5001/api/country\";\r\n  const apiEndpoint = \"https://medalsapi.azurewebsites.net/api/country\";\r\n  const [ countries, setCountries ] = useState([]);\r\n  const medals = useRef([\r\n    { id: 1, name: 'gold' },\r\n    { id: 2, name: 'silver' },\r\n    { id: 3, name: 'bronze' },\r\n  ]);\r\n\r\n  // this is the functional equivalent to componentDidMount\r\n  useEffect(() => {\r\n    // initial data loaded here\r\n    async function fetchCountries() {\r\n      const { data : fetchedCountries } = await axios.get(apiEndpoint);\r\n      setCountries(fetchedCountries);\r\n    }\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  const handleAdd = async (name) => {\r\n    const { data: post } = await axios.post(apiEndpoint, { name: name });\r\n    setCountries(countries.concat(post));\r\n  }\r\n  const handleDelete = async (countryId) => {\r\n    const originalCountries = countries;\r\n    setCountries(countries.filter(c => c.id !== countryId));\r\n    try {\r\n      await axios.delete(`${apiEndpoint}/${countryId}`);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // country already deleted\r\n        console.log(\"The record does not exist - it may have already been deleted\");\r\n      } else { \r\n        alert('An error occurred while deleting');\r\n        setCountries(originalCountries);\r\n      }\r\n    }\r\n  }\r\n  const handleIncrement = (countryId, medalName) => handleUpdate(countryId, medalName, 1);\r\n  const handleDecrement = (countryId, medalName) =>  handleUpdate(countryId, medalName, -1)\r\n  const handleUpdate = async (countryId, medalName, factor) => {\r\n    const originalCountries = countries;\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [...countries ];\r\n    mutableCountries[idx][medalName] += (1 * factor);\r\n    setCountries(mutableCountries);\r\n    const jsonPatch = [{ op: \"replace\", path: medalName, value: mutableCountries[idx][medalName] }];\r\n    console.log(`json patch for id: ${countryId}: ${JSON.stringify(jsonPatch)}`);\r\n\r\n    try {\r\n      await axios.patch(`${apiEndpoint}/${countryId}`, jsonPatch);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // country already deleted\r\n        console.log(\"The record does not exist - it may have already been deleted\");\r\n      } else { \r\n        alert('An error occurred while updating');\r\n        setCountries(originalCountries);\r\n      }\r\n    }\r\n  }\r\n  const getAllMedalsTotal = () => {\r\n    let sum = 0;\r\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name], 0); });\r\n    return sum;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className='appHeading'>\r\n        Olympic Medals\r\n        <span className='badge'>\r\n          { getAllMedalsTotal() }\r\n        </span>\r\n      </div>\r\n      <div className='countries'>\r\n          { countries.map(country => \r\n            <Country \r\n              key={ country.id } \r\n              country={ country } \r\n              medals={ medals.current }\r\n              onDelete={ handleDelete }\r\n              onIncrement={ handleIncrement } \r\n              onDecrement={ handleDecrement } />\r\n          )}\r\n      </div>\r\n      <NewCountry onAdd={ handleAdd } />\r\n    </React.Fragment>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}