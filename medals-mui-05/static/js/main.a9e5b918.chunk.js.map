{"version":3,"sources":["components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","countryMedal","marginTop","display","alignItems","medalAvatar","color","medalName","fontSize","paddingLeft","width","textTransform","iconButton","padding","Medal","props","classes","medal","country","onIncrement","onDecrement","className","Avatar","style","backgroundColor","RGBColor","name","IconButton","onClick","id","disabled","marginLeft","marginRight","divider","marginBottom","countryName","paddingRight","Country","medals","onDelete","Paper","elevation","Grid","container","spacing","item","xs","Badge","badgeContent","sum","forEach","getMedalsTotal","Divider","map","fab","position","bottom","right","NewCountry","useState","open","setOpen","setName","onAdd","handleClose","Fragment","Fab","size","Dialog","onClose","onSubmit","e","preventDefault","handleSubmit","DialogTitle","DialogContent","DialogContentText","TextField","onChange","target","value","autoFocus","margin","label","type","fullWidth","autoComplete","autoCapitalize","DialogActions","Button","trim","length","appHeading","textAlign","paddingTop","paddingBottom","zIndex","opacity","appHeadingBadge","fontFamily","appHeadingText","App","countries","setCountries","useRef","useEffect","gold","silver","bronze","handleDelete","countryId","filter","c","handleIncrement","idx","findIndex","mutableCountries","handleDecrement","current","reduce","a","b","getAllMedalsTotal","Container","fixed","Math","max","concat","justifyContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a9e5b918.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Avatar, IconButton } from '@material-ui/core';\r\nimport AddBoxOutlinedIcon from '@material-ui/icons/AddBoxOutlined';\r\nimport IndeterminateCheckBoxOutlinedIcon from '@material-ui/icons/IndeterminateCheckBoxOutlined';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  countryMedal: {\r\n    marginTop: '10px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  },\r\n  medalAvatar: {\r\n    color: 'black',\r\n  },\r\n  medalName: {\r\n    fontSize: '1.4em',\r\n    paddingLeft: '10px',\r\n    width: '130px',\r\n    textTransform: 'capitalize',\r\n  },\r\n  iconButton: {\r\n    padding: '2px',\r\n  }\r\n});\r\n\r\nconst Medal = (props) => {\r\n  const classes = useStyles();\r\n  const { medal, country, onIncrement, onDecrement } = props;\r\n  return (\r\n    <div className={classes.countryMedal}>\r\n      <Avatar style={{ backgroundColor: medal.RGBColor }} className={classes.medalAvatar}>\r\n        {country[medal.name]}\r\n      </Avatar>\r\n      <span className={classes.medalName}>\r\n        {medal.name} Medals\r\n      </span>\r\n      <IconButton\r\n        onClick={ () => onIncrement(country.id, medal.name) } \r\n        className={classes.iconButton} \r\n        color='primary' \r\n        aria-label='increment gold'>\r\n        <AddBoxOutlinedIcon fontSize='large' />\r\n      </IconButton>\r\n      <IconButton\r\n        disabled={country[medal.name] === 0}\r\n        onClick={ () => onDecrement(country.id, medal.name) }\r\n        className={classes.iconButton}\r\n        color='secondary' \r\n        aria-label='decrement gold'>\r\n        <IndeterminateCheckBoxOutlinedIcon fontSize='large' />\r\n      </IconButton>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medal;\r\n","import React from 'react';\r\nimport Medal from './Medal';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { Divider } from '@material-ui/core';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  country: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginTop: 10,\r\n    padding: 18,\r\n    width: 260,\r\n  },\r\n  divider: {\r\n    marginTop: 5,\r\n    marginBottom: 10,\r\n  },\r\n  countryName: {\r\n    fontSize: '1.8em',\r\n    paddingRight: '8px',\r\n  },\r\n});\r\n\r\nconst Country =(props) => {\r\n  const { country, medals, onIncrement, onDecrement, onDelete } = props;\r\n  const classes = useStyles();\r\n\r\n  const getMedalsTotal = (country, medals) => {\r\n    let sum = 0;\r\n    medals.forEach(medal => { sum += country[medal.name]; });\r\n    return sum;\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={4} className={classes.country}>\r\n      <Grid container spacing={0}>\r\n        <Grid item xs={10}>\r\n          <Badge badgeContent={ getMedalsTotal(country, medals) } color='primary'>\r\n            <div className={classes.countryName}>\r\n              { country.name }\r\n            </div>\r\n          </Badge>\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          <IconButton aria-label=\"delete\" onClick={() => onDelete(country.id)} style={{ padding: 6 }}>\r\n            <DeleteIcon fontSize=\"medium\" />\r\n          </IconButton>\r\n        </Grid>\r\n      </Grid>\r\n      <Divider className={classes.divider} />\r\n      { medals.map(medal =>\r\n        <Medal \r\n          key={ medal.id } \r\n          country={ country } \r\n          medal={ medal } \r\n          onIncrement={ onIncrement } \r\n          onDecrement={ onDecrement } />\r\n      ) }\r\n    </Paper>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React, { useState } from 'react';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: '1em',\r\n    right: '1em'\r\n  }\r\n});\r\n\r\nconst NewCountry = (props) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const { onAdd } = props;\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true);\r\n    setName('');\r\n  }\r\n  const handleClose = () => setOpen(false);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onAdd(name);\r\n    setOpen(false);\r\n  }\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <Fab \r\n        onClick={ handleOpen }\r\n        className={ classes.fab } \r\n        size=\"medium\" \r\n        color=\"primary\" \r\n        aria-label=\"add\">\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog open={ open } onClose={ handleClose } aria-labelledby=\"form-dialog-title\">\r\n      <form onSubmit={ (e) => handleSubmit(e) }>\r\n        <DialogTitle id=\"form-dialog-title\">Add Country</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText>\r\n            To add a new country, enter the name\r\n          </DialogContentText>\r\n          <TextField\r\n            onChange={ (e) => setName(e.target.value) }\r\n            autoFocus\r\n            margin=\"dense\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            value={ name }\r\n            label=\"Country Name\"\r\n            type=\"text\"\r\n            fullWidth\r\n            autoComplete=\"off\"\r\n            autoCapitalize=\"off\"\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={ handleClose } color=\"secondary\">\r\n            Cancel\r\n          </Button>\r\n          <Button disabled={ name.trim().length === 0 } type=\"submit\" color=\"primary\">\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NewCountry;\r\n","// Repository:  medals-a-react\r\n// Author:      Jeff Grissom\r\n// Version:     5.xx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport Country from './components/Country';\r\nimport NewCountry from './components/NewCountry';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Grid } from '@material-ui/core';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport './App.css';\r\n\r\nconst useStyles = makeStyles({\r\n  appHeading: {\r\n    textAlign: 'center',\r\n    margin: 0,\r\n    backgroundColor: '#BBBBF1',\r\n    position: 'fixed',\r\n    width: '100%',\r\n    paddingTop: '15px',\r\n    paddingBottom: '4px',\r\n    zIndex: '1000',\r\n    opacity: '.95',\r\n  },\r\n  appHeadingBadge: {\r\n    fontSize: '2.0em',\r\n    fontFamily: 'Teko, sans-serif',\r\n  },\r\n  appHeadingText: {\r\n    paddingRight: '8px'\r\n  },\r\n});\r\n\r\nconst App = () => {\r\n  const [ countries, setCountries ] = useState([]);\r\n  const medals = useRef([\r\n    { id: 1, name: 'gold', RGBColor: '#ffc107' },\r\n    { id: 2, name: 'silver', RGBColor: '#c4cacc' },\r\n    { id: 3, name: 'bronze', RGBColor: '#cd7f32' },\r\n  ]);\r\n  const classes = useStyles();\r\n\r\n  // this is the functional equivalent to componentDidMount\r\n  useEffect(() => {\r\n    // initial data loaded here\r\n    let fetchedCountries = [\r\n      { id: 1, name: 'United States', gold: 2, silver: 2, bronze: 3 },\r\n      { id: 2, name: 'China', gold: 3, silver: 1, bronze: 0 },\r\n      { id: 3, name: 'Germany', gold: 0, silver: 2, bronze: 2 },\r\n    ]\r\n    setCountries(fetchedCountries);\r\n  }, []);\r\n\r\n  const handleAdd = (name) => {\r\n    const id = countries.length === 0 ? 1 : Math.max(...countries.map(country => country.id)) + 1;\r\n    setCountries([...countries].concat({ id: id, name: name, gold: 0, silver: 0, bronze: 0 }));\r\n  }\r\n  const handleDelete = (countryId) => {\r\n    setCountries([...countries].filter(c => c.id !== countryId));\r\n  }\r\n  const handleIncrement = (countryId, medalName) => {\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [...countries ];\r\n    mutableCountries[idx][medalName] += 1;\r\n    setCountries(mutableCountries);\r\n  }\r\n  const handleDecrement = (countryId, medalName) => {\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [...countries ];\r\n    mutableCountries[idx][medalName] -= 1;\r\n    setCountries(mutableCountries);\r\n  }\r\n  const getAllMedalsTotal = () => {\r\n    let sum = 0;\r\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name], 0); });\r\n    return sum;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className={classes.appHeading}>\r\n        <Badge \r\n          className={classes.appHeadingBadge}\r\n          badgeContent={ getAllMedalsTotal() } \r\n          color='primary'>\r\n          <div className={classes.appHeadingText}>Olympic Medals</div>\r\n        </Badge>\r\n      </div>\r\n      <Container fixed={true} style={{paddingTop: '70px', paddingBottom: '20px'}}>\r\n        <NewCountry onAdd={ handleAdd } />\r\n        <Grid spacing={2} justifyContent='center' container>\r\n          { countries.map(country => \r\n            <Grid item key={ country.id }>\r\n              <Country \r\n                country={ country } \r\n                medals={ medals.current }\r\n                onDelete={ handleDelete }\r\n                onIncrement={ handleIncrement } \r\n                onDecrement={ handleDecrement } />\r\n            </Grid>\r\n          )}\r\n        </Grid>\r\n      </Container>\r\n    </React.Fragment>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}