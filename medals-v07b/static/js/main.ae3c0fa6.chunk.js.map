{"version":3,"sources":["services/medalService.js","components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["medals","id","name","Medal","props","medal","country","onIncrement","onDecrement","className","onClick","Country","onDelete","sum","forEach","getMedalsTotal","map","NewCountry","onAdd","style","marginBottom","prompt","trim","length","alert","App","useState","countries","setCountries","setMedals","apiEndpoint","useEffect","a","axios","get","data","fetchData","handleIncrement","countryId","mutableCountries","idx","findIndex","c","handleDecrement","handleAdd","post","concat","handleDelete","originalCountries","filter","delete","response","status","console","log","getMedalTotal","reduce","b","Fragment","getAllMedalsTotal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae3c0fa6.chunk.js","sourcesContent":["const medals = [\r\n  { id: 1, name: 'gold' },\r\n  { id: 2, name: 'silver' },\r\n  { id: 3, name: 'bronze' },\r\n]\r\n\r\nexport function getMedals() {\r\n  return medals;\r\n}\r\n","import React from 'react';\r\n\r\nconst Medal = (props) => {\r\n  const { medal, country, onIncrement, onDecrement } = props;\r\n  return (\r\n    <div className=\"medals\">\r\n      { medal.name } Medals: { country[medal.name + \"MedalCount\"] }\r\n      <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\r\n      <button onClick={ () => onDecrement(country.id, medal.name) }>-</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medal;\r\n","import React from 'react';\r\nimport Medal from './Medal';\r\n\r\nconst Country = (props) => {\r\n  const { country, medals, onIncrement, onDecrement, onDelete } = props;\r\n\r\n  const getMedalsTotal = (country, medals) => {\r\n    let sum = 0;\r\n    medals.forEach(medal => {\r\n      sum += country[medal.name + 'MedalCount'];\r\n    });\r\n    return sum;\r\n  }\r\n  return (\r\n    <div className=\"section\">\r\n      <div className=\"name\">\r\n        { country.name } - { getMedalsTotal(country, medals) }\r\n      </div>\r\n      { medals.map(medal =>\r\n          <Medal \r\n            key={ medal.id } \r\n            country={ country } \r\n            medal={ medal } \r\n            onIncrement={ onIncrement } \r\n            onDecrement={ onDecrement } />\r\n      ) }\r\n      <button onClick={() => onDelete(country.id)}>delete</button>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n \r\nexport default Country;\r\n","import React from 'react';\r\n\r\nconst NewCountry = (props) => {\r\n  const { onAdd } = props;\r\n\r\n  const handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name === null) {\r\n      return;\r\n    } else if (name.trim().length > 0) {\r\n      onAdd(name);\r\n    } else {\r\n      alert(\"Country name cannot be 0 length\");\r\n    }\r\n  }\r\n  return (\r\n    <button style={{marginBottom: '20px'}} onClick={ handleClick }>New Country</button>\r\n  );\r\n}\r\n \r\nexport default NewCountry;\r\n","// Repository:  medals-b-react\r\n// Author:      Jeff Grissom\r\n// Version:     7.xx\r\nimport React, { useState, useEffect } from 'react';\r\nimport { getMedals } from './services/medalService';\r\n// import { getCountries, addCountry, deleteCountry } from './services/countryService';\r\nimport Country from './components/Country';\r\nimport NewCountry from './components/NewCountry';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [medals, setMedals] = useState([]);\r\n  const apiEndpoint = \"https://medalsapi.azurewebsites.net/api/country\";\r\n\r\n  // this is the functional equivalent to componentDidMount\r\n  useEffect(() => {\r\n    // initial data loaded here\r\n    // setCountries(getCountries());\r\n    setMedals(getMedals());\r\n    async function fetchData() {\r\n      const { data: countries } = await axios.get(apiEndpoint);\r\n      setCountries(countries);\r\n    }\r\n    fetchData();\r\n  },[])\r\n\r\n  const handleIncrement = (countryId, medal) => {\r\n    const mutableCountries = [ ...countries ];\r\n    const idx = mutableCountries.findIndex(c => c.id === countryId);\r\n    mutableCountries[idx][medal + 'MedalCount'] += 1;\r\n    setCountries(mutableCountries);\r\n  }\r\n  const handleDecrement = (countryId, medal) => {\r\n    const mutableCountries = [ ...countries ];\r\n    const idx = mutableCountries.findIndex(c => c.id === countryId);\r\n    if (mutableCountries[idx][medal + 'MedalCount'] === 0) return;\r\n    mutableCountries[idx][medal + 'MedalCount'] -= 1;\r\n    setCountries(mutableCountries);\r\n  }\r\n  const handleAdd = async (name) => {\r\n    const { data: post } = await axios.post(apiEndpoint, { name: name });\r\n    setCountries(countries.concat(post));\r\n  }\r\n  const handleDelete = async (countryId) => {\r\n    const originalCountries = countries;\r\n    setCountries(countries.filter(c => c.id !== countryId));\r\n    try {\r\n      await axios.delete(`${apiEndpoint}/${countryId}`);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // country already deleted\r\n        console.log(\"The record does not exist - it may have already been deleted\");\r\n      } else { \r\n        alert('An error occurred while deleting');\r\n        setCountries(originalCountries);\r\n      }\r\n    }\r\n  }\r\n  const getMedalTotal = (medal) => countries.reduce((a, b) => a + b[medal + 'MedalCount'], 0);\r\n  const getAllMedalsTotal = () => {\r\n    let sum = 0;\r\n    medals.forEach(medal => {\r\n      sum += getMedalTotal(medal.name);\r\n    });\r\n    return sum;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      { countries.map(country => \r\n        <Country \r\n          key={ country.id } \r\n          country={ country } \r\n          medals={ medals }\r\n          onIncrement={ handleIncrement } \r\n          onDecrement={ handleDecrement }\r\n          onDelete={ handleDelete } />\r\n      ) }\r\n      <div className='section'>\r\n        <div className='name'>\r\n          Total Medals Awarded - { getAllMedalsTotal() }\r\n        </div>\r\n        { medals.map(medal => \r\n          <div className='medals' key={medal.id}>\r\n            Total { medal.name } Awarded - { getMedalTotal(medal.name) }\r\n          </div>\r\n        ) }\r\n      </div>\r\n      <div className='section'>\r\n        <hr />\r\n        <NewCountry onAdd={ handleAdd } />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}