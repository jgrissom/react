{"version":3,"sources":["components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Medal","props","medal","country","onIncrement","onDecrement","className","name","onClick","id","disabled","Country","medals","onDelete","sum","forEach","getMedalsTotal","map","NewCountry","onAdd","prompt","trim","length","App","apiEndpoint","useState","countries","setCountries","connection","setConnection","useRef","latestCountries","current","useEffect","a","axios","get","fetchedCountries","data","fetchCountries","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","console","log","on","mutableCountries","concat","filter","c","idx","findIndex","catch","e","handleAdd","post","handleDelete","countryId","originalCountries","delete","response","status","alert","handleIncrement","medalName","handleUpdate","handleDecrement","factor","jsonPatch","op","path","value","JSON","stringify","patch","Fragment","reduce","b","getAllMedalsTotal","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAaeA,EAXD,SAACC,GACb,IAAQC,EAA6CD,EAA7CC,MAAOC,EAAsCF,EAAtCE,QAASC,EAA6BH,EAA7BG,YAAaC,EAAgBJ,EAAhBI,YACrC,OACE,sBAAKC,UAAU,SAAf,UACIJ,EAAMK,KADV,YAC2BJ,EAAQD,EAAMK,MACvC,wBAAQC,QAAU,kBAAMJ,EAAYD,EAAQM,GAAIP,EAAMK,OAAtD,eACA,wBAAQG,SAAmC,IAAxBP,EAAQD,EAAMK,MAAcC,QAAU,kBAAMH,EAAYF,EAAQM,GAAIP,EAAMK,OAA7F,mBCyBSI,EA9BC,SAACV,GACf,IAAQE,EAAwDF,EAAxDE,QAASS,EAA+CX,EAA/CW,OAAQR,EAAuCH,EAAvCG,YAAaC,EAA0BJ,EAA1BI,YAAaQ,EAAaZ,EAAbY,SAOnD,OACE,sBAAKP,UAAU,UAAf,UACE,sBAAKA,UAAU,OAAf,UACIH,EAAQI,KACV,sBAAMD,UAAU,QAAhB,SATiB,SAACH,EAASS,GAC/B,IAAIE,EAAM,EAEV,OADAF,EAAOG,SAAQ,SAAAb,GAAWY,GAAOX,EAAQD,EAAMK,SACxCO,EAOCE,CAAeb,EAASS,QAG5BA,EAAOK,KAAI,SAAAf,GAAK,OAChB,cAAC,EAAD,CAEEC,QAAUA,EACVD,MAAQA,EACRE,YAAcA,EACdC,YAAcA,GAJRH,EAAMO,OAMhB,wBAAQD,QAAS,kBAAMK,EAASV,EAAQM,KAAxC,oBACA,2BCXSS,EAfI,SAACjB,GAClB,IAAQkB,EAAUlB,EAAVkB,MAOR,OACE,qBAAKb,UAAU,mBAAf,SACE,wBAAQE,QARQ,WAClB,IAAMD,EAAOa,OAAO,sBAChBb,GAAQA,EAAKc,OAAOC,OAAS,GAC/BH,EAAMZ,IAKN,4BC2ISgB,G,MA7IH,WAGV,IAAMC,EAAc,kDAEpB,EAAoCC,mBAAS,IAA7C,mBAAQC,EAAR,KAAmBC,EAAnB,KACA,EAAqCF,mBAAS,MAA9C,mBAAQG,EAAR,KAAoBC,EAApB,KACMjB,EAASkB,iBAAO,CACpB,CAAErB,GAAI,EAAGF,KAAM,QACf,CAAEE,GAAI,EAAGF,KAAM,UACf,CAAEE,GAAI,EAAGF,KAAM,YAEXwB,EAAkBD,iBAAO,MAG/BC,EAAgBC,QAAUN,EAG1BO,qBAAU,WAAM,4CAEd,8BAAAC,EAAA,sEAC4CC,IAAMC,IAAIZ,GADtD,gBACiBa,EADjB,EACUC,KACRX,EAAaU,GAFf,4CAFc,0DAMdE,GAGA,IAAMC,GAAgB,IAAIC,KACvBC,QAxBe,iDAyBfC,yBACAC,QAEHf,EAAcW,KACb,IAEHP,qBAAU,WACJL,GACFA,EAAWiB,QACVC,MAAK,WACJC,QAAQC,IAAI,cAEZpB,EAAWqB,GAAG,qBAAqB,SAAA9C,GACjC4C,QAAQC,IAAR,eAAoB7C,EAAQI,OAC5B,IAAI2C,EAAgB,YAAOnB,EAAgBC,SAC3CkB,EAAmBA,EAAiBC,OAAOhD,GAE3CwB,EAAauB,MAGftB,EAAWqB,GAAG,wBAAwB,SAAAxC,GACpCsC,QAAQC,IAAR,qBAA0BvC,IAC1B,IAAIyC,EAAgB,YAAOnB,EAAgBC,SAC3CkB,EAAmBA,EAAiBE,QAAO,SAAAC,GAAC,OAAIA,EAAE5C,KAAOA,KAEzDkB,EAAauB,MAGftB,EAAWqB,GAAG,uBAAuB,SAAA9C,GACnC4C,QAAQC,IAAR,iBAAsB7C,EAAQI,OAC9B,IAAI2C,EAAgB,YAAOnB,EAAgBC,SACrCsB,EAAMJ,EAAiBK,WAAU,SAAAF,GAAC,OAAIA,EAAE5C,KAAON,EAAQM,MAC7DyC,EAAiBI,GAAOnD,EAExBwB,EAAauB,SAGhBM,OAAM,SAAAC,GAAC,OAAIV,QAAQC,IAAI,sBAAuBS,QAGhD,CAAC7B,IAEJ,IAAM8B,EAAS,uCAAG,WAAOnD,GAAP,SAAA2B,EAAA,sEACVC,IAAMwB,KAAKnC,EAAa,CAAEjB,KAAMA,IADtB,2CAAH,sDAGTqD,EAAY,uCAAG,WAAOC,GAAP,eAAA3B,EAAA,6DACb4B,EAAoBpC,EAC1BC,EAAaD,EAAU0B,QAAO,SAAAC,GAAC,OAAIA,EAAE5C,KAAOoD,MAFzB,kBAIX1B,IAAM4B,OAAN,UAAgBvC,EAAhB,YAA+BqC,IAJpB,uDAMb,KAAGG,UAAmC,MAAvB,KAAGA,SAASC,OAE7BlB,QAAQC,IAAI,iEAEZkB,MAAM,oCACNvC,EAAamC,IAXE,yDAAH,sDAeZK,EAAkB,SAACN,EAAWO,GAAZ,OAA0BC,EAAaR,EAAWO,EAAW,IAC/EE,EAAkB,SAACT,EAAWO,GAAZ,OAA2BC,EAAaR,EAAWO,GAAY,IACjFC,EAAY,uCAAG,WAAOR,EAAWO,EAAWG,GAA7B,qBAAArC,EAAA,6DACb4B,EAAoBpC,EACpB4B,EAAM5B,EAAU6B,WAAU,SAAAF,GAAC,OAAIA,EAAE5C,KAAOoD,MACxCX,EAHa,YAGUxB,IACZ4B,GAAKc,IAAe,EAAIG,EACzC5C,EAAauB,GACPsB,EAAY,CAAC,CAAEC,GAAI,UAAWC,KAAMN,EAAWO,MAAOzB,EAAiBI,GAAKc,KAClFrB,QAAQC,IAAR,6BAAkCa,EAAlC,aAAgDe,KAAKC,UAAUL,KAP5C,mBAUXrC,IAAM2C,MAAN,UAAetD,EAAf,YAA8BqC,GAAaW,GAVhC,0DAYb,KAAGR,UAAmC,MAAvB,KAAGA,SAASC,OAE7BlB,QAAQC,IAAI,iEAEZkB,MAAM,oCACNvC,EAAamC,IAjBE,0DAAH,0DA0BlB,OACE,eAAC,IAAMiB,SAAP,WACE,sBAAKzE,UAAU,aAAf,2BAEE,sBAAMA,UAAU,QAAhB,SAToB,WACxB,IAAIQ,EAAM,EAEV,OADAF,EAAOoB,QAAQjB,SAAQ,SAAAb,GAAWY,GAAOY,EAAUsD,QAAO,SAAC9C,EAAG+C,GAAJ,OAAU/C,EAAI+C,EAAE/E,EAAMK,QAAO,MAChFO,EAOCoE,QAGN,qBAAK5E,UAAU,YAAf,SACMoB,EAAUT,KAAI,SAAAd,GAAO,OACrB,cAAC,EAAD,CAEEA,QAAUA,EACVS,OAASA,EAAOoB,QAChBnB,SAAW+C,EACXxD,YAAc+D,EACd9D,YAAciE,GALRnE,EAAQM,SAQtB,cAAC,EAAD,CAAYU,MAAQuC,SCtIXyB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBvC,MAAK,YAAkD,IAA/CwC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d7190c58.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Medal = (props) => {\r\n  const { medal, country, onIncrement, onDecrement } = props;\r\n  return (\r\n    <div className=\"medals\">\r\n      { medal.name } Medals: { country[medal.name] }\r\n      <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\r\n      <button disabled={ country[medal.name] === 0 } onClick={ () => onDecrement(country.id, medal.name) }>-</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medal;\r\n","import React from 'react';\r\nimport Medal from './Medal';\r\n\r\nconst Country = (props) => {\r\n  const { country, medals, onIncrement, onDecrement, onDelete } = props;\r\n\r\n  const getMedalsTotal = (country, medals) => {\r\n    let sum = 0;\r\n    medals.forEach(medal => { sum += country[medal.name]; });\r\n    return sum;\r\n  }\r\n  return (\r\n    <div className=\"country\">\r\n      <div className=\"name\">\r\n        { country.name }\r\n        <span className=\"badge\">\r\n          { getMedalsTotal(country, medals) }\r\n        </span>\r\n      </div>\r\n      { medals.map(medal =>\r\n        <Medal \r\n          key={ medal.id } \r\n          country={ country } \r\n          medal={ medal } \r\n          onIncrement={ onIncrement } \r\n          onDecrement={ onDecrement } />\r\n      ) }\r\n      <button onClick={() => onDelete(country.id)}>delete</button>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react';\r\n\r\nconst NewCountry = (props) => {\r\n  const { onAdd } = props;\r\n  const handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name && name.trim().length > 0) {\r\n      onAdd(name);\r\n    }\r\n  }\r\n  return (\r\n    <div className='newCountryButton'>\r\n      <button onClick={ handleClick }>New Country</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCountry;\r\n","// Repository:  medals-b-react\r\n// Author:      Jeff Grissom\r\n// Version:     8.xx-01\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { HubConnectionBuilder } from '@microsoft/signalr';\r\nimport Country from './components/Country';\r\nimport NewCountry from './components/NewCountry';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  // const apiEndpoint = \"https://localhost:5001/api/country\";\r\n  // const hubEndpoint = \"https://localhost:5001/medalsHub\"\r\n  const apiEndpoint = \"https://medalsapi.azurewebsites.net/api/country\";\r\n  const hubEndpoint = \"https://medalsapi.azurewebsites.net/medalsHub\"\r\n  const [ countries, setCountries ] = useState([]);\r\n  const [ connection, setConnection] = useState(null);\r\n  const medals = useRef([\r\n    { id: 1, name: 'gold' },\r\n    { id: 2, name: 'silver' },\r\n    { id: 3, name: 'bronze' },\r\n  ]);\r\n  const latestCountries = useRef(null);\r\n  // latestCountries.current is a ref variable to countries\r\n  // this is needed to access state variable in useEffect w/o dependency\r\n  latestCountries.current = countries;\r\n\r\n  // this is the functional equivalent to componentDidMount\r\n  useEffect(() => {\r\n    // initial data loaded here\r\n    async function fetchCountries() {\r\n      const { data : fetchedCountries } = await axios.get(apiEndpoint);\r\n      setCountries(fetchedCountries);\r\n    }\r\n    fetchCountries();\r\n\r\n    // signalR\r\n    const newConnection = new HubConnectionBuilder()\r\n      .withUrl(hubEndpoint)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n  // componentDidUpdate (changes to connection)\r\n  useEffect(() => {\r\n    if (connection) {\r\n      connection.start()\r\n      .then(() => {\r\n        console.log('Connected!')\r\n\r\n        connection.on('ReceiveAddMessage', country => {\r\n          console.log(`Add: ${country.name}`);\r\n          let mutableCountries = [...latestCountries.current];\r\n          mutableCountries = mutableCountries.concat(country);\r\n\r\n          setCountries(mutableCountries);\r\n        });\r\n\r\n        connection.on('ReceiveDeleteMessage', id => {\r\n          console.log(`Delete id: ${id}`);\r\n          let mutableCountries = [...latestCountries.current];\r\n          mutableCountries = mutableCountries.filter(c => c.id !== id);\r\n\r\n          setCountries(mutableCountries);\r\n        });\r\n\r\n        connection.on('ReceivePatchMessage', country => {\r\n          console.log(`Patch: ${country.name}`);\r\n          let mutableCountries = [...latestCountries.current];\r\n          const idx = mutableCountries.findIndex(c => c.id === country.id);\r\n          mutableCountries[idx] = country;\r\n\r\n          setCountries(mutableCountries);\r\n        });\r\n      })\r\n      .catch(e => console.log('Connection failed: ', e));\r\n    }\r\n  // useEffect is dependent on changes connection\r\n  }, [connection]);\r\n\r\n  const handleAdd = async (name) => {\r\n    await axios.post(apiEndpoint, { name: name });\r\n  }\r\n  const handleDelete = async (countryId) => {\r\n    const originalCountries = countries;\r\n    setCountries(countries.filter(c => c.id !== countryId));\r\n    try {\r\n      await axios.delete(`${apiEndpoint}/${countryId}`);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // country already deleted\r\n        console.log(\"The record does not exist - it may have already been deleted\");\r\n      } else { \r\n        alert('An error occurred while deleting');\r\n        setCountries(originalCountries);\r\n      }\r\n    }\r\n  }\r\n  const handleIncrement = (countryId, medalName) => handleUpdate(countryId, medalName, 1);\r\n  const handleDecrement = (countryId, medalName) =>  handleUpdate(countryId, medalName, -1)\r\n  const handleUpdate = async (countryId, medalName, factor) => {\r\n    const originalCountries = countries;\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [...countries ];\r\n    mutableCountries[idx][medalName] += (1 * factor);\r\n    setCountries(mutableCountries);\r\n    const jsonPatch = [{ op: \"replace\", path: medalName, value: mutableCountries[idx][medalName] }];\r\n    console.log(`json patch for id: ${countryId}: ${JSON.stringify(jsonPatch)}`);\r\n\r\n    try {\r\n      await axios.patch(`${apiEndpoint}/${countryId}`, jsonPatch);\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 404) {\r\n        // country already deleted\r\n        console.log(\"The record does not exist - it may have already been deleted\");\r\n      } else { \r\n        alert('An error occurred while updating');\r\n        setCountries(originalCountries);\r\n      }\r\n    }\r\n  }\r\n  const getAllMedalsTotal = () => {\r\n    let sum = 0;\r\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name], 0); });\r\n    return sum;\r\n  }\r\n  return (\r\n    <React.Fragment>\r\n      <div className='appHeading'>\r\n        Olympic Medals\r\n        <span className='badge'>\r\n          { getAllMedalsTotal() }\r\n        </span>\r\n      </div>\r\n      <div className='countries'>\r\n          { countries.map(country => \r\n            <Country \r\n              key={ country.id } \r\n              country={ country } \r\n              medals={ medals.current }\r\n              onDelete={ handleDelete }\r\n              onIncrement={ handleIncrement } \r\n              onDecrement={ handleDecrement } />\r\n          )}\r\n      </div>\r\n      <NewCountry onAdd={ handleAdd } />\r\n    </React.Fragment>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}