{"version":3,"sources":["components/Login.jsx","components/Medal.jsx","components/Country.jsx","components/NewCountry.jsx","App.js","reportWebVitals.js","index.js"],"names":["Login","props","onLogin","useState","username","setUsername","password","setPassword","history","useHistory","className","onSubmit","e","preventDefault","console","log","push","handleSubmit","htmlFor","onChange","target","value","autoFocus","type","name","id","placeholder","disabled","length","onClick","Medal","medal","country","onIncrement","onDecrement","canPatch","page_value","saved_value","Fragment","Country","medals","onDelete","onSave","onReset","canDelete","sum","forEach","getMedalsTotal","map","unsaved","renderSaveButton","style","marginLeft","NewCountry","onAdd","prompt","trim","App","apiEndpoint","countries","setCountries","connection","setConnection","useRef","canPost","user","setUser","latestCountries","current","useEffect","a","axios","get","fetchedCountries","data","newCountries","newCountry","count","fetchCountries","encodedJwt","localStorage","getItem","getUser","newConnection","HubConnectionBuilder","withUrl","withAutomaticReconnect","build","start","then","on","mutableCountries","concat","filter","c","updatedCountry","idx","findIndex","catch","handleAdd","isValidToken","post","headers","response","status","alert","handleDelete","countryId","originalCountries","delete","handleSave","originalCounts","jsonPatch","op","path","JSON","stringify","patch","handleReset","handleIncrement","medalName","handleUpdate","handleDecrement","factor","handleLogin","resp","token","setItem","handleLogout","removeItem","decodedJwt","jwtDecode","diff","Date","now","parseInt","indexOf","reduce","b","getAllMedalsTotal","href","to","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.338c3c59.chunk.js","sourcesContent":["import React, {useState}  from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Login(props) {\r\n  const { onLogin } = props;\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const history = useHistory();\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('Submit');\r\n    onLogin(username, password);\r\n    history.push(\"/\");\r\n  }\r\n  const handleCancel = () => {\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <form className='loginForm' onSubmit={(e) => handleSubmit(e)}>\r\n      <p>\r\n        <label htmlFor=\"username\">Username: </label>\r\n        <input onChange={ (e) => setUsername(e.target.value) } value={username} autoFocus type=\"text\" name=\"username\" id=\"username\" placeholder=\"Username\" />\r\n      </p>\r\n      <p>\r\n        <label htmlFor=\"password\">Password: </label>\r\n        <input onChange={ (e) => setPassword(e.target.value) } value={password} type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n      </p>\r\n      <p>\r\n        <button disabled={username.length === 0 || password.length === 0} type=\"submit\">Submit</button> <button onClick={handleCancel} type=\"button\">Cancel</button>\r\n      </p>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst Medal = (props) => {\r\n  const { medal, country, onIncrement, onDecrement, canPatch } = props;\r\n  return (\r\n    <div className=\"medals\">\r\n      { \r\n        ( country[medal.name].page_value !== country[medal.name].saved_value) ?\r\n          <span className=\"delta\">{medal.name} Medals: {country[medal.name].page_value}</span>\r\n        :\r\n          <span>{medal.name} Medals: {country[medal.name].page_value}</span>\r\n      }\r\n      { canPatch && \r\n        <React.Fragment>\r\n          <button onClick={ () => onIncrement(country.id, medal.name) }>+</button>\r\n          <button disabled={ country[medal.name] === 0 } onClick={ () => onDecrement(country.id, medal.name) }>-</button>\r\n        </React.Fragment>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Medal;\r\n","import React from 'react';\r\nimport Medal from './Medal';\r\n\r\nconst Country = (props) => {\r\n  const { country, medals, onIncrement, onDecrement, onDelete, onSave, onReset, canDelete, canPatch } = props;\r\n\r\n  const getMedalsTotal = (country, medals) => {\r\n    let sum = 0;\r\n    medals.forEach(medal => { sum += country[medal.name].page_value; });\r\n    return sum;\r\n  }\r\n  const renderSaveButton = () => {\r\n    let unsaved = false;\r\n    medals.forEach(medal => {\r\n      if (country[medal.name].page_value !== country[medal.name].saved_value) {\r\n        unsaved = true;\r\n      }\r\n    });\r\n    return unsaved;\r\n  }\r\n  return (\r\n    <div className=\"country\">\r\n      <div className=\"name\">\r\n        { country.name }\r\n        <span className=\"badge\">\r\n          { getMedalsTotal(country, medals) }\r\n        </span>\r\n      </div>\r\n      { medals.map(medal =>\r\n        <Medal \r\n          key={ medal.id } \r\n          country={ country } \r\n          medal={ medal } \r\n          canPatch={ canPatch }\r\n          onIncrement={ onIncrement } \r\n          onDecrement={ onDecrement } />\r\n      ) }\r\n      { renderSaveButton() ?\r\n        <React.Fragment>\r\n          <button style={{marginLeft:'8px'}} onClick={ () => onSave(country.id) }>save</button>\r\n          <button style={{marginLeft:'8px'}} onClick={ () => onReset(country.id) }>reset</button>\r\n        </React.Fragment>\r\n        :\r\n        canDelete && <button onClick={() => onDelete(country.id)}>delete</button>\r\n      }\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Country;\r\n","import React from 'react';\r\n\r\nconst NewCountry = (props) => {\r\n  const { onAdd } = props;\r\n  const handleClick = () => {\r\n    const name = prompt('Enter country name');\r\n    if (name && name.trim().length > 0) {\r\n      onAdd(name);\r\n    }\r\n  }\r\n  return (\r\n    <div className='newCountryButton'>\r\n      <button onClick={ handleClick }>New Country</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewCountry;\r\n","// Repository:  medals-b-react\r\n// Author:      Jeff Grissom\r\n// Version:     9.xx\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport axios from 'axios';\r\nimport { HubConnectionBuilder } from '@microsoft/signalr';\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\nimport jwtDecode from 'jwt-decode';\r\nimport Login from './components/Login';\r\nimport Country from './components/Country';\r\nimport NewCountry from './components/NewCountry';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  // const apiEndpoint = \"https://localhost:5001/jwt/api/country\";\r\n  // const hubEndpoint = \"https://localhost:5001/medalsHub\"\r\n  // const usersEndpoint = \"https://localhost:5001/api/users/login\";\r\n  const apiEndpoint = \"https://medalsapi.azurewebsites.net/jwt/api/country\";\r\n  const hubEndpoint = \"https://medalsapi.azurewebsites.net/medalsHub\"\r\n  const usersEndpoint = \"https://medalsapi.azurewebsites.net/api/users/login\";\r\n  const [ countries, setCountries ] = useState([]);\r\n  const [ connection, setConnection] = useState(null);\r\n  const medals = useRef([\r\n    { id: 1, name: 'gold' },\r\n    { id: 2, name: 'silver' },\r\n    { id: 3, name: 'bronze' },\r\n  ]);\r\n  const [ user, setUser ] = useState(\r\n    {\r\n      name: null,\r\n      canPost: false,\r\n      canPatch: false,\r\n      canDelete: false\r\n    }\r\n  );\r\n  const latestCountries = useRef(null);\r\n  // latestCountries.current is a ref variable to countries\r\n  // this is needed to access state variable in useEffect w/o dependency\r\n  latestCountries.current = countries;\r\n\r\n  // this is the functional equivalent to componentDidMount\r\n  useEffect(() => {\r\n    // initial data loaded here\r\n    async function fetchCountries() {\r\n      const { data : fetchedCountries } = await axios.get(apiEndpoint);\r\n      let newCountries = [];\r\n      fetchedCountries.forEach(country => {\r\n        let newCountry = {\r\n          id: country.id,\r\n          name: country.name,\r\n        };\r\n        medals.current.forEach(medal => {\r\n          const count = country[medal.name];\r\n          newCountry[medal.name] = { page_value: count, saved_value: count };\r\n        });\r\n        newCountries.push(newCountry);\r\n      });\r\n      setCountries(newCountries);\r\n    }\r\n    fetchCountries();\r\n\r\n    const encodedJwt = localStorage.getItem(\"token\");\r\n    // check for existing token\r\n    if (encodedJwt) {\r\n      setUser(getUser(encodedJwt));\r\n    }\r\n\r\n    // signalR\r\n    const newConnection = new HubConnectionBuilder()\r\n      .withUrl(hubEndpoint)\r\n      .withAutomaticReconnect()\r\n      .build();\r\n\r\n    setConnection(newConnection);\r\n  }, []);\r\n\r\n  // componentDidUpdate (changes to connection)\r\n  useEffect(() => {\r\n    if (connection) {\r\n      connection.start()\r\n      .then(() => {\r\n        console.log('Connected!')\r\n\r\n        connection.on('ReceiveAddMessage', country => {\r\n          console.log(`Add: ${country.name}`);\r\n\r\n          let newCountry = { \r\n            id: country.id, \r\n            name: country.name,\r\n          };\r\n          medals.current.forEach(medal => {\r\n            const count = country[medal.name];\r\n            newCountry[medal.name] = { page_value: count, saved_value: count };\r\n          });\r\n          let mutableCountries = [...latestCountries.current];\r\n          mutableCountries = mutableCountries.concat(newCountry);\r\n          setCountries(mutableCountries);\r\n        });\r\n\r\n        connection.on('ReceiveDeleteMessage', id => {\r\n          console.log(`Delete id: ${id}`);\r\n          let mutableCountries = [...latestCountries.current];\r\n          mutableCountries = mutableCountries.filter(c => c.id !== id);\r\n          setCountries(mutableCountries);\r\n        });\r\n\r\n        connection.on('ReceivePatchMessage', country => {\r\n          console.log(`Patch: ${country.name}`);\r\n          let updatedCountry = {\r\n            id: country.id,\r\n            name: country.name,\r\n          }\r\n          medals.current.forEach(medal => {\r\n            const count = country[medal.name];\r\n            updatedCountry[medal.name] = { page_value: count, saved_value: count };\r\n          });\r\n          let mutableCountries = [...latestCountries.current];\r\n          const idx = mutableCountries.findIndex(c => c.id === country.id);\r\n          mutableCountries[idx] = updatedCountry;\r\n\r\n          setCountries(mutableCountries);\r\n        });\r\n      })\r\n      .catch(e => console.log('Connection failed: ', e));\r\n    }\r\n  // useEffect is dependent on changes connection\r\n  }, [connection]);\r\n\r\n  const handleAdd = async (name) => {\r\n    // check for valid token\r\n    if (isValidToken())\r\n    {\r\n      try {\r\n        await axios.post(apiEndpoint, {\r\n          name: name\r\n        }, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n      } catch (ex) {\r\n        if (ex.response && ex.response.status === 401) {\r\n          alert(\"You are not authorized to complete this request\");\r\n        } else if (ex.response) {\r\n          console.log(ex.response);\r\n        } else {\r\n          console.log(\"Request failed\");\r\n        }\r\n      }\r\n    } else {\r\n      alert('Your token has expired');\r\n    }\r\n  }\r\n  const handleDelete = async (countryId) => {\r\n    // check for valid token\r\n    if (isValidToken())\r\n    {\r\n      const originalCountries = countries;\r\n      setCountries(countries.filter(c => c.id !== countryId));\r\n      try {\r\n        await axios.delete(`${apiEndpoint}/${countryId}`, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n      } catch (ex) {\r\n        if (ex.response && ex.response.status === 404) {\r\n          // country already deleted\r\n          console.log(\"The record does not exist - it may have already been deleted\");\r\n        } else { \r\n          setCountries(originalCountries);\r\n          if (ex.response && ex.response.status === 401) {\r\n            alert(\"You are not authorized to complete this request\");\r\n          } else if (ex.response) {\r\n            console.log(ex.response);\r\n          } else {\r\n            console.log(\"Request failed\");\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      alert('Your token has expired');\r\n    }\r\n  }\r\n  const handleSave = async (countryId) => {\r\n    const originalCounts = {};\r\n\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [ ...countries ];\r\n    const country = mutableCountries[idx];\r\n    let jsonPatch = [];\r\n    medals.current.forEach(medal => {\r\n      originalCounts[medal.name] = country[medal.name].saved_value;\r\n      if (country[medal.name].page_value !== country[medal.name].saved_value) {\r\n        jsonPatch.push({ op: \"replace\", path: medal.name, value: country[medal.name].page_value });\r\n        country[medal.name].saved_value = country[medal.name].page_value;\r\n      }\r\n    });\r\n    console.log(`json patch for id: ${countryId}: ${JSON.stringify(jsonPatch)}`);\r\n    // check for valid token\r\n    if (isValidToken())\r\n    {\r\n      try {\r\n        await axios.patch(`${apiEndpoint}/${countryId}`, jsonPatch, {\r\n          headers: {\r\n            'Authorization': `Bearer ${localStorage.getItem('token')}`\r\n          }\r\n        });\r\n      } catch (ex) {\r\n        medals.current.forEach(medal => {\r\n          country[medal.name].page_value = originalCounts[medal.name];\r\n          country[medal.name].saved_value = originalCounts[medal.name];\r\n        });     \r\n        if (ex.response && ex.response.status === 404) {\r\n          // country does not exist\r\n          console.log(\"The record does not exist - it may have been deleted\");\r\n        } else if (ex.response && ex.response.status === 401) { \r\n          alert('You are not authorized to complete this request');\r\n        } else if (ex.response) {\r\n          console.log(ex.response);\r\n        } else {\r\n          console.log(\"Request failed\");\r\n        }\r\n      }\r\n    } else {\r\n      medals.current.forEach(medal => {\r\n        country[medal.name].page_value = originalCounts[medal.name];\r\n        country[medal.name].saved_value = originalCounts[medal.name];\r\n      });  \r\n      alert('Your token has expired');\r\n    }\r\n    setCountries(mutableCountries);\r\n  }\r\n  const handleReset = (countryId) => {\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [ ...countries ];\r\n    const country = mutableCountries[idx];\r\n    medals.current.forEach(medal => {\r\n      country[medal.name].page_value = country[medal.name].saved_value;\r\n    });\r\n    setCountries(mutableCountries);\r\n  }\r\n  const handleIncrement = (countryId, medalName) => handleUpdate(countryId, medalName, 1);\r\n  const handleDecrement = (countryId, medalName) => handleUpdate(countryId, medalName, -1);\r\n  const handleUpdate = (countryId, medalName, factor) => {\r\n    const idx = countries.findIndex(c => c.id === countryId);\r\n    const mutableCountries = [...countries ];\r\n    mutableCountries[idx][medalName].page_value += (1 * factor);\r\n    setCountries(mutableCountries);\r\n  }\r\n  const handleLogin = async (username, password) => {\r\n    try {\r\n      const resp = await axios.post(usersEndpoint, { username: username, password: password });\r\n      const encodedJwt = resp.data.token;\r\n      localStorage.setItem('token', encodedJwt);\r\n      setUser(getUser(encodedJwt));\r\n    } catch (ex) {\r\n      if (ex.response && (ex.response.status === 401 || ex.response.status === 400 )) {\r\n        alert(\"Login failed\");\r\n      } else if (ex.response) {\r\n        console.log(ex.response);\r\n      } else {\r\n        console.log(\"Request failed\");\r\n      }\r\n    }\r\n  }\r\n  const handleLogout = (e) => {\r\n    e && e.preventDefault();\r\n    console.log('logout');\r\n    localStorage.removeItem('token');\r\n    setUser({\r\n      name: null,\r\n      canPost: false,\r\n      canPatch: false,\r\n      canDelete: false\r\n    });\r\n    return false;\r\n  }\r\n  const getUser = (encodedJwt) => {\r\n    const decodedJwt = jwtDecode(encodedJwt);\r\n    const diff = Date.now() - (decodedJwt['exp'] * 1000);\r\n    if (diff < 0) {\r\n      // token not expired\r\n      console.log(`token expires in ${parseInt((diff * -1) / 60000)} minutes`);\r\n      return {\r\n        name: decodedJwt['username'],\r\n        canPost: decodedJwt['roles'].indexOf('medals-post') === -1 ? false : true,\r\n        canPatch: decodedJwt['roles'].indexOf('medals-patch') === -1 ? false : true,\r\n        canDelete: decodedJwt['roles'].indexOf('medals-delete') === -1 ? false : true,\r\n      };\r\n    }\r\n    // token expired\r\n    console.log(`token expired ${parseInt(diff / 60000)} minutes ago`);\r\n    localStorage.removeItem('token');\r\n    return {\r\n      name: null,\r\n      canPost: false,\r\n      canPatch: false,\r\n      canDelete: false,\r\n    }\r\n  }\r\n  const isValidToken = () => {\r\n    const encodedJwt = localStorage.getItem(\"token\");\r\n    // check for existing token\r\n    if (encodedJwt) {\r\n      const decodedJwt = jwtDecode(encodedJwt);\r\n      const diff = Date.now() - (decodedJwt['exp'] * 1000);\r\n      if (diff < 0) {\r\n        console.log(`token expires in ${parseInt((diff * -1) / 60000)} minutes`);\r\n        return true;\r\n      } else {\r\n        console.log(`token expired ${parseInt(diff / 60000)} minutes ago`);\r\n        handleLogout();\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n  const getAllMedalsTotal = () => {\r\n    let sum = 0;\r\n    medals.current.forEach(medal => { sum += countries.reduce((a, b) => a + b[medal.name].page_value, 0); });\r\n    return sum;\r\n  }\r\n  return (\r\n    <Router>\r\n      <div className='appHeading'>\r\n        Olympic Medals\r\n        <span className='badge'>\r\n          { getAllMedalsTotal() }\r\n        </span>\r\n        {user.name ? \r\n          <span className='logout'><a href=\"/\" onClick={handleLogout} className='logoutLink'>Logout</a> [{user.name}]</span>\r\n          :\r\n          <Link to=\"/login\" className='loginLink'>Login</Link>\r\n        }\r\n      </div>\r\n      <Route exact path=\"/login\">\r\n        <Login onLogin={handleLogin} />\r\n      </Route>\r\n      <div className='countries'>\r\n          { countries.map(country => \r\n            <Country \r\n              key={ country.id } \r\n              country={ country } \r\n              medals={ medals.current }\r\n              canDelete={ user.canDelete }\r\n              canPatch={ user.canPatch }\r\n              onDelete={ handleDelete }\r\n              onSave={ handleSave }\r\n              onReset={ handleReset }\r\n              onIncrement={ handleIncrement } \r\n              onDecrement={ handleDecrement } />\r\n          )}\r\n      </div>\r\n      { user.canPost && <NewCountry onAdd={ handleAdd } /> }\r\n    </Router>\r\n  );\r\n}\r\n \r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}